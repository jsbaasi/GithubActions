name: ChatGPT Query

on:
  push:
    branches:
      - main

jobs:
  chatgpt_query:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install openai

    - name: Read code from file
      id: read-code
      run: |
        code=$(cat player.py)
        echo "::set-output name=code::$code"

    - name: Query ChatGPT
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        escaped_code=$(echo "$CODE" | head -n 26)
        prompt="{\"role\": \"system\", \"content\": \"You are a helpful assistant.\"}, {\"role\": \"user\", \"content\": \"Given the following code: class Player: def __init__(self, initialAmount=100): self.health, self.alive = (0, False) if initialAmount == 0 else (initialAmount, True); def hitPlayer(self, damageAmount): (setattr(self, 'alive', False) if damageAmount >= self.health else setattr(self, 'health', self.health - damageAmount)) if self.alive == True else None; def healPlayer(self, healAmount): setattr(self, 'health', 100 if self.alive == True and self.health + healAmount >= 100 else self.health + healAmount) if self.alive == True else None, What does this code do? Explain its functionality.\"}"

        response=$(curl https://api.openai.com/v1/chat/completions -X POST -H "Content-Type: application/json" -H "Authorization: Bearer $OPENAI_API_KEY" -d "{\"model\": \"gpt-3.5-turbo\", \"messages\": [$prompt], \"temperature\": 0.7}")

        echo "$response"
